INDEXES OF SUBARRAY SUM :

Given an array arr[] containing only non-negative integers, your task is to find a continuous subarray (a contiguous sequence of elements) whose sum equals a specified value target. You need to return the 1-based indices of the leftmost and rightmost elements of this subarray. You need to find the first subarray whose sum is equal to the target.

Note: If no such array is possible then, return [-1].

Examples:

Input: arr[] = [1, 2, 3, 7, 5], target = 12
Output: [2, 4]
Explanation: The sum of elements from 2nd to 4th position is 12.

Solution :

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    vector<int> subarraySum(vector<int> &arr, int target) {
        vector<int>ans;
        int i=0;
        for(;i<arr.size()-1;i++){
            int temp=arr[i];
            if(temp==target){
                ans.push_back(i+1);
                ans.push_back(i+1);
                break;
            }
            for(int j=i+1;j<arr.size();j++){
                temp+=arr[j];
                if(temp==target){
                    ans.push_back(i+1);
                    ans.push_back(j+1);
                }
            }
            if(ans.size()>0){
                break;
            }
        }
        if(ans.size()==0){
            if(arr[i]==target){
                ans.push_back(i+1);
                ans.push_back(i+1);
            }
            else{
                ans.push_back(-1);
            }
        }
        return ans;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        int d;
        string input;

        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }

        cin >> d;
        cin.ignore();

        Solution ob;
        vector<int> result = ob.subarraySum(arr, d);
        for (int i : result) {
            cout << i << " ";
        }
        cout << "\n~\n";
    }
    return 0;
}

// } Driver Code Ends


